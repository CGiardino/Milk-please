/**
 * Module dependencies
 */

var express = require('express');
var cons = require('consolidate');
var path = require('path');
var fs = require('fs');
var Controllers = require('./controllers');
var Router = require('./router');
var h = require('./helpers');

/*
 * Boot framework
 * 
 * @param {Object} Application instance
 * @param {Function} Callback
 * 
 * @api public
 */

exports.boot = function(app, callback) {
  //Set custom extensions
  require.extensions['.controller.js'] = require.extensions['.js'];
  require.extensions['.model.js'] = require.extensions['.js'];
  require.extensions['.service.js'] = require.extensions['.js'];
  
  //Set application directory
  var appDir = app.get('appDir');
  if(! appDir) {
    appDir = path.join(module.parent.filename, '..', '..', 'app');
    app.set('appDir', appDir);
  }
  
  //User-defined configuration
  var configure = require(path.join(appDir, 'config', 'config'));
  configure(app);
  
  //Express settings
  var engine = app.get('engine');
  var extension = app.get('extension');
  app.engine(extension, cons[engine]);
  app.set('view engine', extension);
  app.set('views', path.join(appDir, 'views'));
  
  //User-defined middleware
  var addMiddleware = require(path.join(appDir, 'config', 'middleware'));
  addMiddleware(app);
  
  //Set path-based agni-style routes
  setRoutes(app);
  
  //Error handling
  app.use(logErrors);
  app.use(errorHandler);
  
  //Listen to connections
  app.listen(app.get('port'));
  console.log('Ready!');
  if((typeof callback) === 'function') {
    callback();
  }
  
  //Error handler
  function errorHandler(err, req, res, next) {
    switch(err.code) {
      case 404:
        res.status(404);
        var errorPage = path.join(appDir, 'views', 'errors', '404.html');
        fs.readFile(errorPage, 'utf8', function(err, html) {
          res.send(html);
        });
        break;

      default:
        res.status(500);
        var errorPage = path.join(appDir, 'views', 'errors', '500.html');
        fs.readFile(errorPage, 'utf8', function(err, html) {
          res.send(html);
        });
    }
  }
}

/**
 * Agni router middleware
 * 
 * @api private
 */

function setRoutes(app) {
  //Build controller list
  var controllers = new Controllers(app);
  controllers.buildList(function(controllerList) {
    //Add router middleware
    var router = new Router(app, controllerList);
    app.use(router);
  });
}

/**
 * Log errors
 * 
 * @api private
 */

function logErrors(err, req, res, next) {
  var isRegularError = ((typeof err) === 'object' &&
    'url' in err && 'code' in err && 'message' in err);
  var errorMsg;
  if(isRegularError) {
    errorMsg = (h.getFormattedDateTime() + ' => ' + err.url + ' '
      + err.code + ' ' + err.message);
  } else {
    errorMsg = (h.getFormattedDateTime() + ' => ' + err);
  }
  
  console.error(errorMsg);
  next(err);
}
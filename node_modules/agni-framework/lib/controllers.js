/**
 * Module dependencies
 */

var fs = require('fs');
var path = require('path');

/**
 * Controller constructor
 * 
 * @param {Object} Application instance
 * 
 * @api public
 */

function Controllers(app) {
  //Controller directory
  this.controllerDir = path.join(app.get('appDir'), 'controllers');
  //Controller list
  this.controllers = {};
}

/**
 * Build controller list
 * 
 * @param {Function} Callback
 * 
 * @api public
 */

Controllers.prototype.buildList = function(done) {
  this._processDir('');
  done(this.controllers);
}

/**
 * Iterate through a directory
 *
 * @api private
 */

Controllers.prototype._processDir = function(dir) {
  var self = this;
  
  //Read directory
  var absDir = path.join(this.controllerDir, dir);
  var list = fs.readdirSync(absDir);
  
  //Iterate on directory contents
  list.forEach(function(element, index, array) {
    var elementPath = path.join(dir, element);
    var stat = fs.statSync(path.join(self.controllerDir, elementPath));
    
    if(stat.isFile()) {
      //If it is a file, add to the controller list
      self._processFile(elementPath);
      
    } else if(stat.isDirectory()) {
      //If it is a directory, call this function recursively
      self._processDir(elementPath);
    }
  });
  return true;
}

/**
 * Add a file to the controller list
 *
 * @api private
 */

Controllers.prototype._processFile = function(file) {
  //Remove extension
  var basename = file.substring(0, file.lastIndexOf('.'));
  basename = basename.replace(/\.controller$/, '');
  
  //Store controller
  var module = require(path.join(this.controllerDir, basename));
  this.controllers[('/' + basename)] = module;
}

module.exports = Controllers;
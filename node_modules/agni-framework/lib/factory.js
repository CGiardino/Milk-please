/**
 * Module dependencies
 */

var path = require('path');

/**
 * Factory constructor
 * 
 * @param {Object} Application instance
 * 
 * @api public
 */

function Factory(app) {
  this.appDir = app.get('appDir');
  this.settings = app.settings;
}

/**
 * Get a model
 * 
 * @param {String} Model name
 * 
 * @api public
 */

Factory.prototype.getModel = function(name) {
  var Model = require(path.join(this.appDir, 'models', name));
  
  if((typeof Model) === 'function') {
    //Add properties to model prototype
    Model.prototype.settings = this.settings;
    
  } else if((typeof Model) === 'object') {
    //Add properties to model object
    Model.settings = this.settings;
  }
  
  return Model;
}

/**
 * Get a service
 * 
 * @param {String} Service name
 * 
 * @api public
 */

Factory.prototype.getService = function(name) {
  var self = this;
  
  var Service = require(path.join(this.appDir, 'services', name));
  
  if((typeof Service) === 'function') {
    //Add properties to service prototype
    Service.prototype.appDir = this.appDir;
    Service.prototype.service = this.getService;
    Service.prototype.settings = this.settings;
    
    Service.prototype.model = function(modelName) {
      if(! modelName) {
        modelName = name;
      }
      return self.getModel(modelName);
    }
    
    Service.construct = function() {
      var service = Service.prototype;
      Service.apply(service, arguments);
      return service;
    }
    
  } else if((typeof Service) === 'object') {
    //Add properties to service object
    Service.appDir = this.appDir;
    Service.service = this.getService;
    Service.settings = this.settings;
    
    Service.model = function(modelName) {
      if(! modelName) {
        modelName = name;
      }
      return self.getModel(modelName);
    }
  }
  
  return Service;
}

module.exports = Factory;